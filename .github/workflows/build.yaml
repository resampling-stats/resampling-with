name: Build book

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-book:
    runs-on: ubuntu-22.04
    env:
      R_LIBS_USER: ~/R_libs:~/R:~/R-dev
      QUARTO_VER: "1.4.51"
      PANDOC_VER: "3.1.2"
      # https://github.com/r-lib/remotes/issues/641
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    if: github.repository_owner == 'resampling-stats'

    steps:
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache/pip
            ~/.local
            ~/.ccache
            ~/R
            ~/R_libs
            ~/R-dev
          key: ${{ runner.os }}-${{ hashFiles('requirements.txt') }}-${{ hashFiles('scripts/install_r_requirements.R') }}

      - name: Install inkscape
        run: sudo apt install inkscape

      - name: Install rsvg tools
        run: sudo apt install librsvg2-bin

      - name: PDF build packages
        run: |
          sudo apt install texlive-xetex texlive-fonts-extra

      - name: Install quarto and matching pandoc
        run: |
          sudo apt install -y curl
          curl -L https://github.com/quarto-dev/quarto-cli/releases/download/v$QUARTO_VER/quarto-$QUARTO_VER-linux-amd64.deb -o quarto.deb
          # PANDOC appends -1 to the archive root name for .deb packages.
          curl -L https://github.com/jgm/pandoc/releases/download/$PANDOC_VER/pandoc-$PANDOC_VER-1-amd64.deb -o pandoc.deb
          sudo dpkg --install quarto.deb pandoc.deb

      - uses: actions/setup-python@v1
        with:
          python-version: '3.10'

      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install R
        run: |
          sudo apt install -y r-base libcurl4-openssl-dev libssl-dev libxml2-dev
          R --version | grep 'version '

      - name: Install R and Python libraries
        run: |
          sudo apt install -y libfontconfig1-dev libmagick++-dev
          make build-init

      - name: Build book
        run: make website

      - name: Deploy PR to Netlify
        if: github.ref != 'refs/heads/main'
        id: netlify
        uses: netlify/actions/cli@master
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.DEV_NETLIFY_SITE_ID }}
        with:
          args: deploy --dir=_www

      - name: Point GitHub status to PR preview
        if: github.ref != 'refs/heads/main'
        uses: Sibz/github-status-action@v1
        with:
          authToken: ${{secrets.GITHUB_TOKEN}}
          state: success
          context: Preview
          target_url: ${{ steps.netlify.outputs.NETLIFY_URL }}

      - name: Deploy docs
        if: github.ref == 'refs/heads/main'
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          FOLDER: _www
          REPOSITORY_NAME: resampling-stats/resampling-with
          BRANCH: gh-pages
          SINGLE_COMMIT: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
